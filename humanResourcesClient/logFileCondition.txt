Нажатие пользователем на кнопку ЗАРЕГИСТРИРОВАТЬСЯ. Переход на окно регистрации --> (Логика окна Регистрации описана в SecondController.java)
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД : введенный аккаунт принадлежит Администратору! Переход на окно для Администратора -->
Администратор нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
выполнение writeObject(Command.CREATE): запись введенного пользователя в поток... Добавление пользователя в БД
Администратор нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
выполнение writeObject(Command.UPDATE): Редактирование пользователя в БД
выполнение writeObject(Command.UPDATE): Редактирование пользователя в БД
Администратор нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД : введенный аккаунт принадлежит Администратору! Переход на окно для Администратора -->
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД : введенный аккаунт принадлежит Администратору! Переход на окно для Администратора -->
Администратор нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Внимание! Введенный аккаунт не найден!
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Нажатие пользователем на кнопку ВОЙТИ.
Пользователь оставил поля ввода ЛОГИНА и/или ПАРОЛЯ пустыми.
Нажатие пользователем на кнопку ЗАРЕГИСТРИРОВАТЬСЯ. Переход на окно регистрации --> (Логика окна Регистрации описана в SecondController.java)
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД : введенный аккаунт принадлежит Администратору! Переход на окно для Администратора -->
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД : введенный аккаунт принадлежит Администратору! Переход на окно для Администратора -->
Администратор нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД : введенный аккаунт принадлежит Администратору! Переход на окно для Администратора -->
Администратор нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД : введенный аккаунт принадлежит Администратору! Переход на окно для Администратора -->
Администратор нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД : введенный аккаунт принадлежит Администратору! Переход на окно для Администратора -->
Администратор нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД : введенный аккаунт принадлежит Администратору! Переход на окно для Администратора -->
Администратор нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД : введенный аккаунт принадлежит Администратору! Переход на окно для Администратора -->
Администратор нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД : введенный аккаунт принадлежит Администратору! Переход на окно для Администратора -->
Администратор нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
выполнение writeObject(Command.CREATE): запись введенного пользователя в поток... Добавление пользователя в БД
Администратор нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
выполнение writeObject(Command.UPDATE): Редактирование пользователя в БД
Администратор нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ЗАРЕГИСТРИРОВАТЬСЯ. Переход на окно регистрации --> (Логика окна Регистрации описана в SecondController.java)
Нажатие пользователем на кнопку ЗАРЕГИСТРИРОВАТЬСЯ. Переход на окно регистрации --> (Логика окна Регистрации описана в SecondController.java)
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Сотрудник нажал на ПРОСМОТРЕТЬ ОТПУСКА
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Сотрудник нажал на ПРОСМОТРЕТЬ ОТПУСКА
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Сотрудник нажал на ПРОСМОТРЕТЬ ОТПУСКА
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Сотрудник нажал на ПРОСМОТРЕТЬ ОТПУСКА
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Сотрудник нажал на ПРОСМОТРЕТЬ ОТПУСКА
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Сотрудник нажал на ПРОСМОТРЕТЬ ОТПУСКА
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Сотрудник нажал на ПРОСМОТРЕТЬ ОТПУСКА
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Сотрудник нажал на ПРОСМОТРЕТЬ ОТПУСКА
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Сотрудник нажал на ПРОСМОТРЕТЬ ОТПУСКА
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Сотрудник нажал на ПРОСМОТРЕТЬ ОТПУСКА
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Сотрудник нажал на ПРОСМОТРЕТЬ ОТПУСКА
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Сотрудник нажал на ПРОСМОТРЕТЬ ОТПУСКА
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Сотрудник нажал на ПРОСМОТРЕТЬ ОТПУСКА
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Сотрудник нажал на ПРОСМОТРЕТЬ ОТПУСКА
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Сотрудник нажал на ПРОСМОТРЕТЬ ОТПУСКА
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Сотрудник нажал на ПРОСМОТРЕТЬ ОТПУСКА
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Сотрудник нажал на ПРОСМОТРЕТЬ ОТПУСКА
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Сотрудник нажал на ПРОСМОТРЕТЬ ОТПУСКА
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Сотрудник нажал на ПРОСМОТРЕТЬ ОТПУСКА
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Сотрудник нажал на ПРОСМОТРЕТЬ ОТПУСКА
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Сотрудник нажал на ПРОСМОТРЕТЬ ОТПУСКА
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Сотрудник нажал на ПРОСМОТРЕТЬ ОТПУСКА
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Сотрудник нажал на ПРОСМОТРЕТЬ ОТПУСКА
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Сотрудник нажал на ПРОСМОТРЕТЬ ОТПУСКА
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Сотрудник нажал на ПРОСМОТРЕТЬ ОТПУСКА
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Сотрудник нажал на ПРОСМОТРЕТЬ ОТПУСКА
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Сотрудник нажал на ПРОСМОТРЕТЬ ОТПУСКА
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Сотрудник нажал на ПРОСМОТРЕТЬ ОТПУСКА
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Сотрудник нажал на ПРОСМОТРЕТЬ ОТПУСКА
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Сотрудник нажал на ПРОСМОТРЕТЬ ОТПУСКА
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Сотрудник нажал на ПРОСМОТРЕТЬ ОТПУСКА
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Сотрудник нажал на ПРОСМОТРЕТЬ ОТПУСКА
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Сотрудник нажал на ПРОСМОТРЕТЬ ОТПУСКА
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Сотрудник нажал на ПРОСМОТРЕТЬ ОТПУСКА
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Сотрудник нажал на ПРОСМОТРЕТЬ ОТПУСКА
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Сотрудник нажал на ПРОСМОТРЕТЬ ОТПУСКА
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Сотрудник нажал на ПРОСМОТРЕТЬ ОТПУСКА
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Сотрудник нажал на ПРОСМОТРЕТЬ ОТПУСКА
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Сотрудник нажал на ПРОСМОТРЕТЬ ОТПУСКА
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Сотрудник нажал на ПРОСМОТРЕТЬ ОТПУСКА
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Сотрудник нажал на ПРОСМОТРЕТЬ ОТПУСКА
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Сотрудник нажал на ПРОСМОТРЕТЬ ОТПУСКА
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Сотрудник нажал на ПРОСМОТРЕТЬ ОТПУСКА
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ЗАРЕГИСТРИРОВАТЬСЯ. Переход на окно регистрации --> (Логика окна Регистрации описана в SecondController.java)
Регистрация клиента... Добавление пользователя в БД
Клиент успешно добавлен! DB: warehouse; Table: users :)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Сотрудник нажал на ПРОСМОТРЕТЬ ОТПУСКА
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Сотрудник нажал на ПРОСМОТРЕТЬ ОТПУСКА
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Сотрудник нажал на ПРОСМОТРЕТЬ ОТПУСКА
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Сотрудник нажал на ПРОСМОТРЕТЬ ОТПУСКА
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Сотрудник нажал на ПРОСМОТРЕТЬ ОТПУСКА
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Сотрудник нажал на ПРОСМОТРЕТЬ ОТПУСКА
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Сотрудник нажал на ПРОСМОТРЕТЬ ОТПУСКА
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД : введенный аккаунт принадлежит Администратору! Переход на окно для Администратора -->
Администратор нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
выполнение writeObject(Command.DELETE): Удаление пользователя из БД
Администратор нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
выполнение writeObject(Command.UPDATE): Редактирование пользователя в БД
Администратор нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
выполнение writeObject(Command.CREATE): запись введенного пользователя в поток... Добавление пользователя в БД
Администратор нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
выполнение writeObject(Command.UPDATE): Редактирование пользователя в БД
Администратор нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Внимание! Введенный аккаунт не найден!
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Внимание! Введенный аккаунт не найден!
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Внимание! Введенный аккаунт не найден!
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД : введенный аккаунт принадлежит Администратору! Переход на окно для Администратора -->
Администратор нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Внимание! Введенный аккаунт не найден!
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД : введенный аккаунт принадлежит Администратору! Переход на окно для Администратора -->
Администратор нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Внимание! Введенный аккаунт не найден!
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Сотрудник нажал на ПРОСМОТРЕТЬ ОТПУСКА
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Сотрудник нажал на ПРОСМОТРЕТЬ ОТПУСКА
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Внимание! Введенный аккаунт не найден!
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Внимание! Введенный аккаунт не найден!
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Внимание! Введенный аккаунт не найден!
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Внимание! Введенный аккаунт не найден!
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Внимание! Введенный аккаунт не найден!
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД: введенный аккаунт принадлежит Пользователю! Переход на окно для Пользователя -->(Логика окна Пользователя описана в MainUserController.java)
Пользователь нажал на ПРОСМОТРЕТЬ
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Сотрудник нажал на ПРОСМОТРЕТЬ ОТПУСКА
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Сотрудник нажал на ПРОСМОТРЕТЬ ОТПУСКА
выполнение writeObject(Command.READ): запись списка пользователей в поток... Получение всех пользователей из БД
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД : введенный аккаунт принадлежит Администратору! Переход на окно для Администратора -->
Нажатие пользователем на кнопку ВОЙТИ.
Получение введенных данных пользователем. Проверка на наличие аккаунта в БД...
Результат запроса из БД : введенный аккаунт принадлежит Администратору! Переход на окно для Администратора -->
